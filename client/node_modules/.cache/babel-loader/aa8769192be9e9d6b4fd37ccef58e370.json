{"ast":null,"code":"var _jsxFileName = \"/home/hakan/patika/patika-frontend-proje-ecommerce/client/src/pages/Products/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Card from \"../../components/Card\";\nimport { Grid, Box, Flex, Button } from \"@chakra-ui/react\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { fetchProductList } from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Products() {\n  _s();\n\n  const {\n    data,\n    error,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n    status\n  } = useInfiniteQuery(\"products\", fetchProductList, {\n    getNextPageParam: (lastGroup, allGroups) => {\n      const morePagesExist = (lastGroup === null || lastGroup === void 0 ? void 0 : lastGroup.length) === 12; //backend'de controller/product/index.js'de limit de 12 olmalı ki çalışsın\n\n      if (!morePagesExist) {\n        return;\n      }\n\n      return allGroups.length + 1;\n    }\n  });\n  if (status === \"loading\") return \"Loading...\";\n  if (error === \"error\") return \"An error has occurred: \" + error.message;\n  console.log(\"data\", data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      p: \"1rem\",\n      templateColumns: \"repeat(auto-fill, minmax(300px, 1fr))\",\n      gap: 8,\n      children: data.pages.map((group, i) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: group.map(item => /*#__PURE__*/_jsxDEV(Box, {\n          w: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            item: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      mt: \"10\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => fetchNextPage(),\n        isLoading: isFetchingNextPage,\n        disabled: !hasNextPage || isFetchingNextPage,\n        children: isFetchingNextPage ? \"Loading more...\" : hasNextPage ? \"Load More\" : \"Nothing more to load\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Products, \"I5iCW4y1xKrTFH5H4DKxWiBGEH4=\", false, function () {\n  return [useInfiniteQuery];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/home/hakan/patika/patika-frontend-proje-ecommerce/client/src/pages/Products/index.js"],"names":["React","Card","Grid","Box","Flex","Button","useInfiniteQuery","fetchProductList","Products","data","error","fetchNextPage","hasNextPage","isFetchingNextPage","status","getNextPageParam","lastGroup","allGroups","morePagesExist","length","message","console","log","pages","map","group","i","item","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,IAApB,EAA0BC,MAA1B,QAAwC,kBAAxC;AACA,SAASC,gBAAT,QAAiC,aAAjC;AAEA,SAASC,gBAAT,QAAiC,WAAjC;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,aAHI;AAIJC,IAAAA,WAJI;AAKJC,IAAAA,kBALI;AAMJC,IAAAA;AANI,MAOFR,gBAAgB,CAAC,UAAD,EAAaC,gBAAb,EAA+B;AACjDQ,IAAAA,gBAAgB,EAAE,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAC1C,YAAMC,cAAc,GAAG,CAAAF,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEG,MAAX,MAAsB,EAA7C,CAD0C,CAE1C;;AAEA,UAAI,CAACD,cAAL,EAAqB;AACnB;AACD;;AACD,aAAOD,SAAS,CAACE,MAAV,GAAmB,CAA1B;AACD;AATgD,GAA/B,CAPpB;AAmBA,MAAIL,MAAM,KAAK,SAAf,EAA0B,OAAO,YAAP;AAE1B,MAAIJ,KAAK,KAAK,OAAd,EAAuB,OAAO,4BAA4BA,KAAK,CAACU,OAAzC;AAEvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBb,IAApB;AACA,sBACE;AAAA,4BACE,QAAC,IAAD;AACE,MAAA,CAAC,EAAC,MADJ;AAEE,MAAA,eAAe,EAAC,uCAFlB;AAGE,MAAA,GAAG,EAAE,CAHP;AAAA,gBAQGA,IAAI,CAACc,KAAL,CAAWC,GAAX,CAAe,CAACC,KAAD,EAAQC,CAAR,kBACd,QAAC,KAAD,CAAO,QAAP;AAAA,kBACGD,KAAK,CAACD,GAAN,CAAWG,IAAD,iBACT,QAAC,GAAD;AAAK,UAAA,CAAC,EAAC,MAAP;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF,WAAmBA,IAAI,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH,SAAqBF,CAArB;AAAA;AAAA;AAAA;AAAA,cADD;AARH;AAAA;AAAA;AAAA;AAAA,YADF,eAoBE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,IAAT;AAAc,MAAA,cAAc,EAAC,QAA7B;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAE,MAAMf,aAAa,EAD9B;AAEE,QAAA,SAAS,EAAEE,kBAFb;AAGE,QAAA,QAAQ,EAAE,CAACD,WAAD,IAAgBC,kBAH5B;AAAA,kBAKGA,kBAAkB,GACf,iBADe,GAEfD,WAAW,GACX,WADW,GAEX;AATN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GA7DQJ,Q;UAQHF,gB;;;KARGE,Q;AA+DT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport Card from \"../../components/Card\";\nimport { Grid, Box, Flex, Button } from \"@chakra-ui/react\";\nimport { useInfiniteQuery } from \"react-query\";\n\nimport { fetchProductList } from \"../../api\";\n\nfunction Products() {\n  const {\n    data,\n    error,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n    status,\n  } = useInfiniteQuery(\"products\", fetchProductList, {\n    getNextPageParam: (lastGroup, allGroups) => {\n      const morePagesExist = lastGroup?.length === 12;\n      //backend'de controller/product/index.js'de limit de 12 olmalı ki çalışsın\n\n      if (!morePagesExist) {\n        return;\n      }\n      return allGroups.length + 1;\n    },\n  });\n\n  if (status === \"loading\") return \"Loading...\";\n\n  if (error === \"error\") return \"An error has occurred: \" + error.message;\n\n  console.log(\"data\", data);\n  return (\n    <div>\n      <Grid\n        p=\"1rem\"\n        templateColumns=\"repeat(auto-fill, minmax(300px, 1fr))\"\n        gap={8}\n      >\n        {/* {data.pages[0].map((item, key) => (\n          <Card key={key} item={item} />\n        ))} */}\n        {data.pages.map((group, i) => (\n          <React.Fragment key={i}>\n            {group.map((item) => (\n              <Box w=\"100%\" key={item.id}>\n                <Card item={item} />\n              </Box>\n            ))}\n          </React.Fragment>\n        ))}\n      </Grid>\n\n      <Flex mt=\"10\" justifyContent=\"center\">\n        <Button\n          onClick={() => fetchNextPage()}\n          isLoading={isFetchingNextPage}\n          disabled={!hasNextPage || isFetchingNextPage}\n        >\n          {isFetchingNextPage\n            ? \"Loading more...\"\n            : hasNextPage\n            ? \"Load More\"\n            : \"Nothing more to load\"}\n        </Button>\n      </Flex>\n    </div>\n  );\n}\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}