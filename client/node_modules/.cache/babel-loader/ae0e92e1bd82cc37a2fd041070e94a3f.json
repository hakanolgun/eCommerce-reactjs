{"ast":null,"code":"var _jsxFileName = \"/home/hakan/patika/patika-frontend-proje-ecommerce/client/src/pages/Basket/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { useBasket } from \"../../contexts/BasketContext\";\nimport { Alert, Image, Button, Box, Text, Textarea } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./styles.module.css\";\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, useDisclosure, FormControl, FormLabel } from \"@chakra-ui/react\";\nimport { postOrder } from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Basket() {\n  _s();\n\n  const [address, setAddress] = useState(\"\");\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const initialRef = useRef();\n  const {\n    items,\n    removeFromBasket,\n    emptyBasket\n  } = useBasket();\n  const total = items.reduce((acc, obj) => acc + obj.price, 0);\n\n  const handleSubmitForm = async () => {\n    const itemIds = items.map(item => item._id);\n    const input = {\n      address,\n      items: JSON.stringify(itemIds)\n    };\n    await postOrder(input);\n    emptyBasket();\n    onClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: \"10\",\n    children: [items.length < 1 && /*#__PURE__*/_jsxDEV(Alert, {\n      status: \"warning\",\n      children: \"You have not any items in your basket\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), items.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.basketul,\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles.basketli,\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/product/${item.id}`,\n            className: styles.basketlink,\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              htmlWidth: 100,\n              src: item.image,\n              alt: \"basket item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [item.price, \" \\u20BA\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: styles.basketremovebtn,\n            mt: \"2\",\n            size: \"sm\",\n            colorScheme: \"pink\",\n            onClick: () => removeFromBasket(item.id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: \"10\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"22\",\n          children: [\"Total: \", total, \" \\u20BA\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        mt: \"2\",\n        onClick: onOpen,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        initialFocusRef: initialRef,\n        isOpen: isOpen,\n        onClose: onClose,\n        children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n          children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n            children: \"Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n            pb: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n                ref: initialRef,\n                placeholder: \"Enter your address here...\",\n                value: address,\n                onChange: e => setAddress(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"blue\",\n              mr: 3,\n              onClick: handleSubmitForm,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onClose,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Basket, \"M91MOaQVIDZYB93R1QZMJ7KHb60=\", false, function () {\n  return [useDisclosure, useBasket];\n});\n\n_c = Basket;\nexport default Basket;\n\nvar _c;\n\n$RefreshReg$(_c, \"Basket\");","map":{"version":3,"sources":["/home/hakan/patika/patika-frontend-proje-ecommerce/client/src/pages/Basket/index.js"],"names":["React","useState","useRef","useBasket","Alert","Image","Button","Box","Text","Textarea","Link","styles","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","useDisclosure","FormControl","FormLabel","postOrder","Basket","address","setAddress","isOpen","onOpen","onClose","initialRef","items","removeFromBasket","emptyBasket","total","reduce","acc","obj","price","handleSubmitForm","itemIds","map","item","_id","input","JSON","stringify","length","basketul","basketli","id","basketlink","image","title","basketremovebtn","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { useBasket } from \"../../contexts/BasketContext\";\nimport { Alert, Image, Button, Box, Text, Textarea } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./styles.module.css\";\n\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  FormControl,\n  FormLabel,\n} from \"@chakra-ui/react\";\nimport { postOrder } from \"../../api\";\n\nfunction Basket() {\n    const [address, setAddress] = useState(\"\");\n\tconst { isOpen, onOpen, onClose } = useDisclosure();\n\tconst initialRef = useRef();\n\n\tconst { items, removeFromBasket, emptyBasket } = useBasket();\n\tconst total = items.reduce((acc, obj) => acc + obj.price, 0);\n\n\tconst handleSubmitForm = async () => {\n\t\tconst itemIds = items.map((item) => item._id);\n\n\t\tconst input = {\n\t\t\taddress,\n\t\t\titems: JSON.stringify(itemIds),\n\t\t};\n\n\t\tawait postOrder(input);\n\n\t\temptyBasket();\n\t\tonClose();\n\t};\n\n  return (\n    <Box p=\"10\">\n      {items.length < 1 && (\n        <Alert status=\"warning\">You have not any items in your basket</Alert>\n      )}\n\n      {items.length > 0 && (\n        <>\n          <ul className={styles.basketul}>\n            {items.map((item) => (\n              <li key={item.id} className={styles.basketli}>\n                <Link to={`/product/${item.id}`} className={styles.basketlink}>\n                  <Image htmlWidth={100} src={item.image} alt=\"basket item\" />\n                  <p>{item.title}</p>\n                  <p>{item.price} ₺</p>\n                </Link>\n                <Button\n                  className={styles.basketremovebtn}\n                  mt=\"2\"\n                  size=\"sm\"\n                  colorScheme=\"pink\"\n                  onClick={() => removeFromBasket(item.id)}\n                >\n                  Remove\n                </Button>\n              </li>\n            ))}\n          </ul>\n          <Box mt=\"10\">\n            <Text fontSize=\"22\">Total: {total} ₺</Text>\n          </Box>\n\n          <Button mt=\"2\" onClick={onOpen}>\n            Order\n          </Button>\n\n          <Modal\n            initialFocusRef={initialRef}\n            isOpen={isOpen}\n            onClose={onClose}\n          >\n            <ModalOverlay />\n            <ModalContent>\n              <ModalHeader>Order</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody pb={6}>\n                <FormControl>\n                  <FormLabel>Address</FormLabel>\n                  <Textarea\n                    ref={initialRef}\n                    placeholder=\"Enter your address here...\"\n                    value={address}\n                    onChange={(e) => setAddress(e.target.value)}\n                  />\n                </FormControl>\n              </ModalBody>\n\n              <ModalFooter>\n                <Button colorScheme=\"blue\" mr={3} onClick={handleSubmitForm}>\n                  Save\n                </Button>\n                <Button onClick={onClose}>Cancel</Button>\n              </ModalFooter>\n            </ModalContent>\n          </Modal>\n        </>\n      )}\n    </Box>\n  );\n}\n\nexport default Basket;\n"]},"metadata":{},"sourceType":"module"}