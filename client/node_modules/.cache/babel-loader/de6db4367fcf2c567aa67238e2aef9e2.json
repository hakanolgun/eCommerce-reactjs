{"ast":null,"code":"var _jsxFileName = \"/home/hakan/patika/patika-frontend-proje-ecommerce/client/src/pages/Basket/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { useBasket, emptyBasket } from \"../../contexts/BasketContext\";\nimport { Alert, Image, Button, Box, Text, Textarea } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./styles.module.css\";\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, useDisclosure, FormControl, FormLabel, Label } from \"@chakra-ui/react\";\nimport { postOrder } from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Basket() {\n  _s();\n\n  const [address, setAddress] = useState('');\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const initialRef = React.useRef();\n  const finalRef = React.useRef();\n\n  const handleSubmitForm = async () => {\n    const itemIds = items.map(item => item.id);\n    const input = {\n      address,\n      items: JSON.stringify(itemIds)\n    };\n    postOrder(input);\n    emptyBasket();\n    onClose();\n    console.log(\"itemIds\", itemIds);\n  };\n\n  const {\n    items,\n    removeFromBasket\n  } = useBasket();\n  const total = items.reduce((acc, obj) => acc + obj.price, 0);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: \"10\",\n    children: [items.length < 1 && /*#__PURE__*/_jsxDEV(Alert, {\n      status: \"warning\",\n      children: \"You have not any items in your basket\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), items.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.basketul,\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles.basketli,\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/product/${item.id}`,\n            className: styles.basketlink,\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              htmlWidth: 100,\n              src: item.image,\n              alt: \"basket item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [item.price, \" \\u20BA\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: styles.basketremovebtn,\n            mt: \"2\",\n            size: \"sm\",\n            colorScheme: \"pink\",\n            onClick: () => removeFromBasket(item.id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: \"10\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"22\",\n          children: [\"Total: \", total, \" \\u20BA\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        mt: \"2\",\n        onClick: onOpen,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        initialFocusRef: initialRef,\n        finalFocusRef: finalRef,\n        isOpen: isOpen,\n        onClose: onClose,\n        children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n          children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n            children: \"Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n            pb: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n                ref: initialRef,\n                placeholder: \"Enter your address here...\",\n                value: address,\n                onChange: e => setAddress(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"blue\",\n              mr: 3,\n              onClick: handleSubmitForm,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onClose,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Basket, \"ZXcxvJDdJzRfVFO1bbFhlMI7dUQ=\", false, function () {\n  return [useDisclosure, useBasket];\n});\n\n_c = Basket;\nexport default Basket;\n\nvar _c;\n\n$RefreshReg$(_c, \"Basket\");","map":{"version":3,"sources":["/home/hakan/patika/patika-frontend-proje-ecommerce/client/src/pages/Basket/index.js"],"names":["React","useRef","useState","useBasket","emptyBasket","Alert","Image","Button","Box","Text","Textarea","Link","styles","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","useDisclosure","FormControl","FormLabel","Label","postOrder","Basket","address","setAddress","isOpen","onOpen","onClose","initialRef","finalRef","handleSubmitForm","itemIds","items","map","item","id","input","JSON","stringify","console","log","removeFromBasket","total","reduce","acc","obj","price","length","basketul","basketli","basketlink","image","title","basketremovebtn","e","target","value"],"mappings":"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","sourcesContent":["import React,{ useRef, useState } from \"react\";\nimport { useBasket, emptyBasket } from \"../../contexts/BasketContext\";\nimport { Alert, Image, Button, Box, Text, Textarea } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./styles.module.css\";\n\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  FormControl,\n  FormLabel,\n  Label\n} from \"@chakra-ui/react\";\nimport { postOrder } from \"../../api\";\n\n\nfunction Basket() {\n    const [address, setAddress ] = useState('');\n\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    const initialRef = React.useRef()\n    const finalRef = React.useRef()\n\n\n    const handleSubmitForm = async () => {\n        const itemIds = items.map((item)=> item.id);\n        \n\n        const input = {\n            address,\n            items: JSON.stringify(itemIds),\n        };\n\n        postOrder(input);\n\n        emptyBasket();\n        onClose();\n\n\n\n        console.log(\"itemIds\", itemIds);\n    }\n\n    const { items, removeFromBasket } = useBasket();\n\n  const total = items.reduce((acc, obj) => acc + obj.price, 0);\n\n  return (\n    <Box p=\"10\">\n      {items.length < 1 && (\n        <Alert status=\"warning\">You have not any items in your basket</Alert>\n      )}\n\n      {items.length > 0 && (\n        <>\n          <ul className={styles.basketul}>\n            {items.map((item) => (\n              <li key={item.id} className={styles.basketli}>\n                <Link to={`/product/${item.id}`} className={styles.basketlink}>\n                  <Image htmlWidth={100} src={item.image} alt=\"basket item\" />\n                  <p>{item.title}</p>\n                  <p>{item.price} ₺</p>\n                </Link>\n                <Button\n                  className={styles.basketremovebtn}\n                  mt=\"2\"\n                  size=\"sm\"\n                  colorScheme=\"pink\"\n                  onClick={() => removeFromBasket(item.id)}\n                >\n                  Remove\n                </Button>\n              </li>\n            ))}\n          </ul>\n          <Box mt=\"10\">\n            <Text fontSize=\"22\">Total: {total} ₺</Text>\n          </Box>\n\n          <Button mt=\"2\" onClick={onOpen}>Order</Button>\n\n          <Modal\n        initialFocusRef={initialRef}\n        finalFocusRef={finalRef}\n        isOpen={isOpen}\n        onClose={onClose}\n      >\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Order</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody pb={6}>\n            <FormControl>\n              <FormLabel>Address</FormLabel>\n              <Textarea ref={initialRef} placeholder=\"Enter your address here...\" value={address} onChange={(e)=> setAddress(e.target.value)}/>\n            </FormControl>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button colorScheme=\"blue\" mr={3} onClick={handleSubmitForm}>\n              Save\n            </Button>\n            <Button onClick={onClose}>Cancel</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n        </>\n      )}\n    </Box>\n  );\n}\n\nexport default Basket;\n"]},"metadata":{},"sourceType":"module"}