{"ast":null,"code":"var _jsxFileName = \"/home/hakan/patika/patika-frontend-proje-ecommerce/client/src/contexts/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, createContext, useContext, useEffect } from \"react\";\nimport { fetchMe, fetchLogout } from \"../api\";\nimport { Flex, Spinner } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n\n  const [user, setUser] = useState(null);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    (async () => {\n      try {\n        const me = await fetchMe();\n        setLoggedIn(true);\n        setUser(me);\n        setLoading(false);\n      } catch (e) {\n        console.log(\"useeffect\", e);\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  const login = data => {\n    setLoggedIn(true);\n    setUser(data.user);\n    localStorage.setItem(\"access-token\", data.accessToken);\n    localStorage.setItem(\"refresh-token\", data.refreshToken);\n  }; //callback'i çıkış yaptıktan sonra anasayfaya yönlendirme yapmak için ekledik.\n\n\n  const logout = async callback => {\n    setLoggedIn(false);\n    setUser(null);\n    await fetchLogout();\n    localStorage.removeItem(\"access-token\");\n    localStorage.removeItem(\"refresh-token\");\n    callback();\n  };\n\n  const values = {\n    loggedIn,\n    user,\n    login,\n    logout\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        thickness: \"4px\",\n        speed: \"0.65s\",\n        emptyColor: \"gray.200\",\n        size: \"xl\",\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AuthProvider, \"evkwBE5+knMALQwVVq7ftrK2laE=\");\n\n_c = AuthProvider;\n\nconst useAuth = () => {\n  _s2();\n\n  return useContext(AuthContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AuthProvider, useAuth };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/hakan/patika/patika-frontend-proje-ecommerce/client/src/contexts/AuthContext.js"],"names":["useState","createContext","useContext","useEffect","fetchMe","fetchLogout","Flex","Spinner","AuthContext","AuthProvider","children","user","setUser","loggedIn","setLoggedIn","loading","setLoading","me","e","console","log","login","data","localStorage","setItem","accessToken","refreshToken","logout","callback","removeItem","values","useAuth"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,aAAnB,EAAkCC,UAAlC,EAA8CC,SAA9C,QAA+D,OAA/D;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,QAArC;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,kBAA9B;;AACA,MAAMC,WAAW,gBAAGP,aAAa,EAAjC;;AAEA,MAAMQ,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACrC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,IAAD,CAAtC;AAEAG,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,UAAI;AACF,cAAMc,EAAE,GAAG,MAAMb,OAAO,EAAxB;AACAU,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,QAAAA,OAAO,CAACK,EAAD,CAAP;AACAD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OALD,CAKE,OAAOE,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,CAAzB;AACAF,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAVD;AAWD,GAZQ,EAYN,EAZM,CAAT;;AAcA,QAAMK,KAAK,GAAIC,IAAD,IAAU;AACtBR,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,IAAAA,OAAO,CAACU,IAAI,CAACX,IAAN,CAAP;AAEAY,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCF,IAAI,CAACG,WAA1C;AACAF,IAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCF,IAAI,CAACI,YAA3C;AACD,GAND,CAnBqC,CA2BrC;;;AACA,QAAMC,MAAM,GAAG,MAAOC,QAAP,IAAoB;AACjCd,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,OAAO,CAAC,IAAD,CAAP;AAEA,UAAMP,WAAW,EAAjB;AAEAkB,IAAAA,YAAY,CAACM,UAAb,CAAwB,cAAxB;AACAN,IAAAA,YAAY,CAACM,UAAb,CAAwB,eAAxB;AAEAD,IAAAA,QAAQ;AACT,GAVD;;AAaA,QAAME,MAAM,GAAG;AACbjB,IAAAA,QADa;AAEbF,IAAAA,IAFa;AAGbU,IAAAA,KAHa;AAIbM,IAAAA;AAJa,GAAf;;AAOA,MAAIZ,OAAJ,EAAa;AACX,wBACE,QAAC,IAAD;AAAM,MAAA,cAAc,EAAC,QAArB;AAA8B,MAAA,UAAU,EAAC,QAAzC;AAAkD,MAAA,MAAM,EAAC,OAAzD;AAAA,6BACE,QAAC,OAAD;AACE,QAAA,SAAS,EAAC,KADZ;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,UAAU,EAAC,UAHb;AAIE,QAAA,IAAI,EAAC,IAJP;AAKE,QAAA,KAAK,EAAC;AALR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAED,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEe,MAA7B;AAAA,cAAsCpB;AAAtC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA/DD;;GAAMD,Y;;KAAAA,Y;;AAiEN,MAAMsB,OAAO,GAAG;AAAA;;AAAA,SAAM7B,UAAU,CAACM,WAAD,CAAhB;AAAA,CAAhB;;IAAMuB,O;;AAEN,SAAStB,YAAT,EAAuBsB,OAAvB","sourcesContent":["import { useState, createContext, useContext, useEffect } from \"react\";\nimport { fetchMe, fetchLogout } from \"../api\";\nimport { Flex, Spinner } from \"@chakra-ui/react\";\nconst AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const me = await fetchMe();\n        setLoggedIn(true);\n        setUser(me);\n        setLoading(false);\n      } catch (e) {\n        console.log(\"useeffect\", e);\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  const login = (data) => {\n    setLoggedIn(true);\n    setUser(data.user);\n\n    localStorage.setItem(\"access-token\", data.accessToken);\n    localStorage.setItem(\"refresh-token\", data.refreshToken);\n  };\n\n  //callback'i çıkış yaptıktan sonra anasayfaya yönlendirme yapmak için ekledik.\n  const logout = async (callback) => {\n    setLoggedIn(false);\n    setUser(null);\n\n    await fetchLogout();\n\n    localStorage.removeItem(\"access-token\");\n    localStorage.removeItem(\"refresh-token\");\n\n    callback();\n  };\n\n\n  const values = {\n    loggedIn,\n    user,\n    login,\n    logout\n  };\n\n  if (loading) {\n    return (\n      <Flex justifyContent=\"center\" alignItems=\"center\" height=\"100vh\">\n        <Spinner\n          thickness=\"4px\"\n          speed=\"0.65s\"\n          emptyColor=\"gray.200\"\n          size=\"xl\"\n          color=\"red\"\n        />\n      </Flex>\n    );\n  }\n\n  return <AuthContext.Provider value={values}>{children}</AuthContext.Provider>;\n};\n\nconst useAuth = () => useContext(AuthContext);\n\nexport { AuthProvider, useAuth };\n"]},"metadata":{},"sourceType":"module"}