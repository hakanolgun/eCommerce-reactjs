{"ast":null,"code":"var _jsxFileName = \"/home/hakan/patika/patika-frontend-proje-ecommerce/client/src/pages/Auth/Signup/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Flex, Box, Heading, FormControl, FormLabel, Input, Button } from \"@chakra-ui/react\";\nimport { useFormik } from \"formik\";\nimport validationSchema from \"./validations\";\nimport { fetchRegister } from \"../../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Signup() {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      passwordConfirm: \"\"\n    },\n    validationSchema,\n    onSubmit: async (values, bag) => {\n      try {\n        const registerResponse = await fetchRegister(values);\n        console.log(registerResponse);\n      } catch {}\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      align: \"center\",\n      width: \"full\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        pt: 10,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          my: 5,\n          textAlign: \"left\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: formik.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"E-Mail\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                name: \"email\",\n                onChange: formik.handleChange,\n                onBlur: formik.handleBlur,\n                value: formik.values.email,\n                isInvalid: formik.touched.email && formik.errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              mt: \"4\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                name: \"password\",\n                type: \"password\",\n                onChange: formik.handleChange,\n                onBlur: formik.handleBlur,\n                value: formik.values.password,\n                isInvalid: formik.touched.password && formik.errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              mt: \"4\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Password Confirm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                name: \"passwordConfirm\",\n                type: \"password\",\n                onChange: formik.handleChange,\n                onBlur: formik.handleBlur,\n                value: formik.values.passwordConfirm,\n                isInvalid: formik.touched.passwordConfirm && formik.errors.passwordConfirm\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              mt: \"4\",\n              width: \"full\",\n              type: \"submit\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signup, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/hakan/patika/patika-frontend-proje-ecommerce/client/src/pages/Auth/Signup/index.js"],"names":["React","Flex","Box","Heading","FormControl","FormLabel","Input","Button","useFormik","validationSchema","fetchRegister","Signup","formik","initialValues","email","password","passwordConfirm","onSubmit","values","bag","registerResponse","console","log","handleSubmit","handleChange","handleBlur","touched","errors"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Flex,\n  Box,\n  Heading,\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n} from \"@chakra-ui/react\";\nimport { useFormik } from \"formik\";\nimport validationSchema from \"./validations\";\n\nimport { fetchRegister } from \"../../../api\";\n\nfunction Signup() {\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      passwordConfirm: \"\",\n    },\n    validationSchema,\n    onSubmit: async (values, bag) => {\n      try {\n          const registerResponse = await fetchRegister(values);\n          console.log(registerResponse);\n      } catch {}\n    },\n  });\n\n  return (\n    <div>\n      <Flex align=\"center\" width=\"full\" justifyContent=\"center\">\n        <Box pt={10}>\n          <Box textAlign=\"center\">\n            <Heading>Sign Up</Heading>\n          </Box>\n          <Box my={5} textAlign=\"left\">\n            <form onSubmit={formik.handleSubmit}>\n              <FormControl>\n                <FormLabel>E-Mail</FormLabel>\n                <Input\n                  name=\"email\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.email}\n                  isInvalid={formik.touched.email && formik.errors.email}\n                />\n              </FormControl>\n              <FormControl mt=\"4\">\n                <FormLabel>Password</FormLabel>\n                <Input\n                  name=\"password\"\n                  type=\"password\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.password}\n                  isInvalid={formik.touched.password && formik.errors.password}\n                />\n              </FormControl>\n              <FormControl mt=\"4\">\n                <FormLabel>Password Confirm</FormLabel>\n                <Input\n                  name=\"passwordConfirm\"\n                  type=\"password\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.passwordConfirm}\n                  isInvalid={\n                    formik.touched.passwordConfirm &&\n                    formik.errors.passwordConfirm\n                  }\n                />\n              </FormControl>\n\n              <Button mt=\"4\" width=\"full\" type=\"submit\">\n                Sign Up\n              </Button>\n            </form>\n          </Box>\n        </Box>\n      </Flex>\n    </div>\n  );\n}\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}