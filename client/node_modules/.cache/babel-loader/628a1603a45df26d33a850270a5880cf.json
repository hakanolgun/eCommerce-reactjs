{"ast":null,"code":"var _jsxFileName = \"/home/hakan/patika/patika-frontend-proje-ecommerce/client/src/pages/Products/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Card from \"../../components/Card\";\nimport { Grid } from \"@chakra-ui/layout\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { fetchProductList } from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Products() {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(\"products\", fetchProductList, {\n    getNextPageParam: (lastGroup, allGroups) => {\n      const morePagesExist = (lastGroup === null || lastGroup === void 0 ? void 0 : lastGroup.length) === 12;\n\n      if (!morePagesExist) {\n        return;\n      }\n\n      return allGroups.length + 1;\n    }\n  });\n  if (isLoading) return \"Loading...\";\n  if (error) return \"An error has occurred: \" + error.message;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      p: \"1rem\",\n      templateColumns: \"repeat(auto-fill, minmax(300px, 1fr))\",\n      gap: 8,\n      children: data.map((item, key) => /*#__PURE__*/_jsxDEV(Card, {\n        item: item\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Products, \"P7jBIA24rc00P7RvfXjpVl6dqRI=\", true);\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/home/hakan/patika/patika-frontend-proje-ecommerce/client/src/pages/Products/index.js"],"names":["React","Card","Grid","useInfiniteQuery","fetchProductList","Products","isLoading","error","data","useQuery","getNextPageParam","lastGroup","allGroups","morePagesExist","length","message","map","item","key"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,gBAAT,QAAiC,aAAjC;AAEA,SAASC,gBAAT,QAAiC,WAAjC;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAA6BC,QAAQ,CAAC,UAAD,EAAaL,gBAAb,EAA+B;AACxEM,IAAAA,gBAAgB,EAAE,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAC1C,YAAMC,cAAc,GAAG,CAAAF,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEG,MAAX,MAAsB,EAA7C;;AAEA,UAAI,CAACD,cAAL,EAAqB;AACnB;AACD;;AACD,aAAOD,SAAS,CAACE,MAAV,GAAmB,CAA1B;AACD;AARuE,GAA/B,CAA3C;AAWA,MAAIR,SAAJ,EAAe,OAAO,YAAP;AAEf,MAAIC,KAAJ,EAAW,OAAO,4BAA4BA,KAAK,CAACQ,OAAzC;AAEX,sBACE;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,CAAC,EAAC,MADJ;AAEE,MAAA,eAAe,EAAC,uCAFlB;AAGE,MAAA,GAAG,EAAE,CAHP;AAAA,gBAKGP,IAAI,CAACQ,GAAL,CAAS,CAACC,IAAD,EAAOC,GAAP,kBACR,QAAC,IAAD;AAAgB,QAAA,IAAI,EAAED;AAAtB,SAAWC,GAAX;AAAA;AAAA;AAAA;AAAA,cADD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA7BQb,Q;;KAAAA,Q;AA+BT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport Card from \"../../components/Card\";\nimport { Grid } from \"@chakra-ui/layout\";\nimport { useInfiniteQuery } from \"react-query\";\n\nimport { fetchProductList } from \"../../api\";\n\nfunction Products() {\n  const { isLoading, error, data } = useQuery(\"products\", fetchProductList, {\n    getNextPageParam: (lastGroup, allGroups) => {\n      const morePagesExist = lastGroup?.length === 12;\n\n      if (!morePagesExist) {\n        return;\n      }\n      return allGroups.length + 1;\n    },\n  });\n\n  if (isLoading) return \"Loading...\";\n\n  if (error) return \"An error has occurred: \" + error.message;\n\n  return (\n    <div>\n      <Grid\n        p=\"1rem\"\n        templateColumns=\"repeat(auto-fill, minmax(300px, 1fr))\"\n        gap={8}\n      >\n        {data.map((item, key) => (\n          <Card key={key} item={item} />\n        ))}\n      </Grid>\n    </div>\n  );\n}\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}