{"ast":null,"code":"var _jsxFileName = \"/home/hakan/patika/patika-frontend-proje-ecommerce/client/src/contexts/BasketContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, createContext, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasketContext = /*#__PURE__*/createContext();\nconst defaultBasket = JSON.parse(localStorage.getItem(\"basket\")) || [];\n\nconst BasketProvider = ({\n  children\n}) => {\n  _s();\n\n  const [items, setItems] = useState(defaultBasket);\n\n  const addToBasket = (myProduct, findBasketItem) => {\n    if (!findBasketItem) {\n      return setItems(items => [...items, myProduct]);\n    }\n\n    const filtered = items.filter(item => item.id !== findBasketItem.id);\n    setItems(filtered);\n  };\n\n  const removeFromBasket = item_id => {\n    const filtered = items.filter(item => item.id !== item_id);\n    setItems(filtered);\n  };\n\n  const values = {\n    items,\n    setItems,\n    addToBasket,\n    removeFromBasket\n  };\n  return /*#__PURE__*/_jsxDEV(BasketContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasketProvider, \"6/X3eDkdZuMxIgaxohrAT+gHeB4=\");\n\n_c = BasketProvider;\n\nconst useBasket = () => {\n  _s2();\n\n  return useContext(BasketContext);\n};\n\n_s2(useBasket, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { BasketProvider, useBasket };\n\nvar _c;\n\n$RefreshReg$(_c, \"BasketProvider\");","map":{"version":3,"sources":["/home/hakan/patika/patika-frontend-proje-ecommerce/client/src/contexts/BasketContext.js"],"names":["useState","createContext","useContext","BasketContext","defaultBasket","JSON","parse","localStorage","getItem","BasketProvider","children","items","setItems","addToBasket","myProduct","findBasketItem","filtered","filter","item","id","removeFromBasket","item_id","values","useBasket"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,aAAnB,EAAkCC,UAAlC,QAAoD,OAApD;;AAEA,MAAMC,aAAa,gBAAGF,aAAa,EAAnC;AAEA,MAAMG,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,KAA8C,EAApE;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACvC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAACI,aAAD,CAAlC;;AAEA,QAAMS,WAAW,GAAG,CAACC,SAAD,EAAYC,cAAZ,KAA+B;AACjD,QAAI,CAACA,cAAL,EAAqB;AACnB,aAAOH,QAAQ,CAAED,KAAD,IAAW,CAAC,GAAGA,KAAJ,EAAWG,SAAX,CAAZ,CAAf;AACD;;AACD,UAAME,QAAQ,GAAGL,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,cAAc,CAACI,EAAlD,CAAjB;AACAP,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACD,GAND;;AAQA,QAAMI,gBAAgB,GAAIC,OAAD,IAAa;AACpC,UAAML,QAAQ,GAAGL,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYE,OAAnC,CAAjB;AACAT,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACD,GAHD;;AAKA,QAAMM,MAAM,GAAG;AACbX,IAAAA,KADa;AAEbC,IAAAA,QAFa;AAGbC,IAAAA,WAHa;AAIbO,IAAAA;AAJa,GAAf;AAOA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEE,MAA/B;AAAA,cAAwCZ;AAAxC;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CA1BD;;GAAMD,c;;KAAAA,c;;AA4BN,MAAMc,SAAS,GAAG;AAAA;;AAAA,SAAMrB,UAAU,CAACC,aAAD,CAAhB;AAAA,CAAlB;;IAAMoB,S;;AAEN,SAASd,cAAT,EAAyBc,SAAzB","sourcesContent":["import { useState, createContext, useContext } from \"react\";\n\nconst BasketContext = createContext();\n\nconst defaultBasket = JSON.parse(localStorage.getItem(\"basket\")) || [];\n\nconst BasketProvider = ({ children }) => {\n  const [items, setItems] = useState(defaultBasket);\n\n  const addToBasket = (myProduct, findBasketItem) => {\n    if (!findBasketItem) {\n      return setItems((items) => [...items, myProduct]);\n    }\n    const filtered = items.filter((item) => item.id !== findBasketItem.id);\n    setItems(filtered);\n  };\n\n  const removeFromBasket = (item_id) => {\n    const filtered = items.filter((item) => item.id !== item_id);\n    setItems(filtered);\n  };\n\n  const values = {\n    items,\n    setItems,\n    addToBasket,\n    removeFromBasket,\n  };\n\n  return (\n    <BasketContext.Provider value={values}>{children}</BasketContext.Provider>\n  );\n};\n\nconst useBasket = () => useContext(BasketContext);\n\nexport { BasketProvider, useBasket };\n"]},"metadata":{},"sourceType":"module"}