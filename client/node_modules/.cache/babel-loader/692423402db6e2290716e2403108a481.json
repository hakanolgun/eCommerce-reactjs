{"ast":null,"code":"var _jsxFileName = \"/home/hakan/patika/patika-frontend-proje-ecommerce/client/src/pages/Products/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Card from \"../../components/Card\";\nimport { Grid } from \"@chakra-ui/layout\";\nimport { useQuery } from \"react-query\";\nimport { fetchProductList } from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Products() {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(\"products\", fetchProductList);\n  if (isLoading) return \"Loading...\";\n  if (error) return \"An error has occurred: \" + error.message;\n  console.log(\"data\", data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      templateColumns: \"repeat(4, 1fr)\",\n      gap: 6,\n      children: data.map((item, key) => /*#__PURE__*/_jsxDEV(Card, {\n        item: item\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Products, \"P7jBIA24rc00P7RvfXjpVl6dqRI=\", false, function () {\n  return [useQuery];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/home/hakan/patika/patika-frontend-proje-ecommerce/client/src/pages/Products/index.js"],"names":["React","Card","Grid","useQuery","fetchProductList","Products","isLoading","error","data","message","console","log","map","item","key"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,SAAQC,gBAAR,QAA+B,WAA/B;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAA6BL,QAAQ,CAAC,UAAD,EAAaC,gBAAb,CAA3C;AAEA,MAAIE,SAAJ,EAAe,OAAO,YAAP;AAEf,MAAIC,KAAJ,EAAW,OAAO,4BAA4BA,KAAK,CAACE,OAAzC;AAEXC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,IAApB;AAEA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,eAAe,EAAC,gBAAtB;AAAuC,MAAA,GAAG,EAAE,CAA5C;AAAA,gBACGA,IAAI,CAACI,GAAL,CAAS,CAACC,IAAD,EAAOC,GAAP,kBACR,QAAC,IAAD;AAAgB,QAAA,IAAI,EAAED;AAAtB,SAAWC,GAAX;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAlBQT,Q;UAC4BF,Q;;;KAD5BE,Q;AAoBT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport Card from \"../../components/Card\";\nimport { Grid } from \"@chakra-ui/layout\";\nimport { useQuery } from \"react-query\";\n\nimport {fetchProductList} from \"../../api\"; \n\nfunction Products() {\n  const { isLoading, error, data } = useQuery(\"products\", fetchProductList);\n\n  if (isLoading) return \"Loading...\";\n\n  if (error) return \"An error has occurred: \" + error.message;\n\n  console.log(\"data\", data);\n\n  return (\n    <div>\n      <Grid templateColumns=\"repeat(4, 1fr)\" gap={6}>\n        {data.map((item, key) => (\n          <Card key={key} item={item} />\n        ))}\n      </Grid>\n    </div>\n  );\n}\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}