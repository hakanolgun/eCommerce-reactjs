{"ast":null,"code":"var _jsxFileName = \"/home/hakan/patika/patika-frontend-proje-ecommerce/client/src/pages/Products/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Card from \"../../components/Card\";\nimport { Grid } from \"@chakra-ui/layout\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { fetchProductList } from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Products() {\n  _s();\n\n  const {\n    data,\n    error,\n    fetchNextPage,\n    hasNextPage,\n    isFetching,\n    isFetchingNextPage,\n    status\n  } = useInfiniteQuery(\"products\", fetchProductList, {\n    getNextPageParam: (lastGroup, allGroups) => {\n      const {\n        morePagesExist\n      } = (lastGroup === null || lastGroup === void 0 ? void 0 : lastGroup.length) === 12;\n\n      if (!morePagesExist) {\n        return;\n      }\n\n      return allGroups.length + 1;\n    }\n  });\n  if (status === \"loading\") return \"Loading...\";\n  if (error === \"error\") return \"An error has occurred: \" + error.message;\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      p: \"1rem\",\n      templateColumns: \"repeat(auto-fill, minmax(300px, 1fr))\",\n      gap: 8,\n      children: data.pages.map((group, i) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: group.map(item => /*#__PURE__*/_jsxDEV(Box, {\n          w: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            item: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this))\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Products, \"nrmKlEHPEQtVZceaePscNtD9aFk=\", false, function () {\n  return [useInfiniteQuery];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/home/hakan/patika/patika-frontend-proje-ecommerce/client/src/pages/Products/index.js"],"names":["React","Card","Grid","useInfiniteQuery","fetchProductList","Products","data","error","fetchNextPage","hasNextPage","isFetching","isFetchingNextPage","status","getNextPageParam","lastGroup","allGroups","morePagesExist","length","message","console","log","pages","map","group","i","item","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,gBAAT,QAAiC,aAAjC;AAEA,SAASC,gBAAT,QAAiC,WAAjC;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM;AACJC,IAAAA,IADI;AAGJC,IAAAA,KAHI;AAKJC,IAAAA,aALI;AAOJC,IAAAA,WAPI;AASJC,IAAAA,UATI;AAWJC,IAAAA,kBAXI;AAaJC,IAAAA;AAbI,MAcFT,gBAAgB,CAAC,UAAD,EAAaC,gBAAb,EAA+B;AACjDS,IAAAA,gBAAgB,EAAE,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAC1C,YAAM;AAAEC,QAAAA;AAAF,UAAqB,CAAAF,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEG,MAAX,MAAsB,EAAjD;;AAEA,UAAI,CAACD,cAAL,EAAqB;AACnB;AACD;;AACD,aAAOD,SAAS,CAACE,MAAV,GAAmB,CAA1B;AACD;AARgD,GAA/B,CAdpB;AAyBA,MAAIL,MAAM,KAAK,SAAf,EAA0B,OAAO,YAAP;AAE1B,MAAIL,KAAK,KAAK,OAAd,EAAuB,OAAO,4BAA4BA,KAAK,CAACW,OAAzC;AAEvBC,EAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACA,sBACE;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,CAAC,EAAC,MADJ;AAEE,MAAA,eAAe,EAAC,uCAFlB;AAGE,MAAA,GAAG,EAAE,CAHP;AAAA,gBAQGA,IAAI,CAACe,KAAL,CAAWC,GAAX,CAAe,CAACC,KAAD,EAAQC,CAAR,kBACd,QAAC,KAAD,CAAO,QAAP;AAAA,kBACGD,KAAK,CAACD,GAAN,CAAWG,IAAD,iBACT,QAAC,GAAD;AAAK,UAAA,CAAC,EAAC,MAAP;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF,WAAmBA,IAAI,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH,SAAqBF,CAArB;AAAA;AAAA;AAAA;AAAA,cADD;AARH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GArDQnB,Q;UAeHF,gB;;;KAfGE,Q;AAuDT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport Card from \"../../components/Card\";\nimport { Grid } from \"@chakra-ui/layout\";\nimport { useInfiniteQuery } from \"react-query\";\n\nimport { fetchProductList } from \"../../api\";\n\nfunction Products() {\n  const {\n    data,\n\n    error,\n\n    fetchNextPage,\n\n    hasNextPage,\n\n    isFetching,\n\n    isFetchingNextPage,\n\n    status,\n  } = useInfiniteQuery(\"products\", fetchProductList, {\n    getNextPageParam: (lastGroup, allGroups) => {\n      const { morePagesExist } = lastGroup?.length === 12;\n\n      if (!morePagesExist) {\n        return;\n      }\n      return allGroups.length + 1;\n    },\n  });\n\n  if (status === \"loading\") return \"Loading...\";\n\n  if (error === \"error\") return \"An error has occurred: \" + error.message;\n\n  console.log(data);\n  return (\n    <div>\n      <Grid\n        p=\"1rem\"\n        templateColumns=\"repeat(auto-fill, minmax(300px, 1fr))\"\n        gap={8}\n      >\n        {/* {data.pages[0].map((item, key) => (\n          <Card key={key} item={item} />\n        ))} */}\n        {data.pages.map((group, i) => (\n          <React.Fragment key={i}>\n            {group.map((item) => (\n              <Box w=\"100%\" key={item.id}>\n                <Card item={item} />\n              </Box>\n            ))}\n          </React.Fragment>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}