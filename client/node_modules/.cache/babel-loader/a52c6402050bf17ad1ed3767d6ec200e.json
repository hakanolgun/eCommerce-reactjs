{"ast":null,"code":"var _jsxFileName = \"/home/hakan/patika/patika-frontend-proje-ecommerce/client/src/pages/Admin/ProductDetail/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchProduct, updateProduct } from \"../../../api\";\nimport { useQuery } from \"react-query\";\nimport { Text, Box, FormControl, FormLabel, Input, Textarea, Button } from \"@chakra-ui/react\";\nimport { message } from \"antd\";\nimport { Formik, FieldArray } from \"formik\";\nimport validationSchema from \"./validations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ProductDetail() {\n  _s();\n\n  const {\n    product_id\n  } = useParams();\n  const {\n    isLoading,\n    isError,\n    data,\n    error\n  } = useQuery([\"admin:product\", product_id], () => fetchProduct(product_id));\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n  const handleSubmit = async (values, bag) => {\n    console.log(\"submitted\");\n    message.loading({\n      content: \"Loading...\",\n      key: \"product_update\"\n    });\n\n    try {\n      await updateProduct(values, product_id);\n      message.success({\n        content: \"The product successfully updated\",\n        key: \"product_update\",\n        duration: 2\n      });\n    } catch (e) {\n      message.error(\"The product does not updated.\");\n    }\n  };\n\n  console.log(\"admindata\", data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"2xl\",\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        title: data.title,\n        description: data.description,\n        price: data.price,\n        photos: data.photos\n      },\n      validationSchema: validationSchema,\n      onSubmit: handleSubmit,\n      children: ({\n        handleSubmit,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        values,\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            my: \"5\",\n            textAlign: \"left\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  name: \"title\",\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  value: values.title,\n                  disabled: isSubmitting,\n                  isInvalid: touched.title && errors.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 21\n                }, this), touched.title && errors.title && /*#__PURE__*/_jsxDEV(Text, {\n                  color: \"red.500\",\n                  children: errors.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                mt: \"4\",\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n                  name: \"description\",\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  value: values.description,\n                  disabled: isSubmitting,\n                  isInvalid: touched.description && errors.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this), touched.description && errors.description && /*#__PURE__*/_jsxDEV(Text, {\n                  color: \"red.500\",\n                  children: errors.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                mt: \"4\",\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  children: \"Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  name: \"price\",\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  value: values.price,\n                  disabled: isSubmitting,\n                  isInvalid: touched.price && errors.price\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 21\n                }, this), touched.price && errors.price && /*#__PURE__*/_jsxDEV(Text, {\n                  color: \"red.500\",\n                  children: errors.price\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                mt: \"4\",\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  children: \"Photos\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n                  name: \"photos\",\n                  render: arrayHelpers => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [values.photos && values.photos.map((photo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(Input, {\n                        name: `photos.${index}`,\n                        value: photo,\n                        disabled: isSubmitting,\n                        onChange: handleChange,\n                        width: \"3xl\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 134,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        ml: \"4\",\n                        type: \"button\",\n                        colorScheme: \"red\",\n                        onClick: () => arrayHelpers.remove(index),\n                        children: \"Remove\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 142,\n                        columnNumber: 33\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 31\n                    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n                      mt: \"5\",\n                      onClick: () => arrayHelpers.push(\"\"),\n                      children: \"Add a Photo\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                mt: 4,\n                width: \"full\",\n                type: \"submit\",\n                isLoading: isSubmitting,\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductDetail, \"0mO15an6nBrD9zPvcXt0/2aWqio=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c = ProductDetail;\nexport default ProductDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDetail\");","map":{"version":3,"sources":["/home/hakan/patika/patika-frontend-proje-ecommerce/client/src/pages/Admin/ProductDetail/index.js"],"names":["React","useParams","fetchProduct","updateProduct","useQuery","Text","Box","FormControl","FormLabel","Input","Textarea","Button","message","Formik","FieldArray","validationSchema","ProductDetail","product_id","isLoading","isError","data","error","handleSubmit","values","bag","console","log","loading","content","key","success","duration","e","title","description","price","photos","errors","touched","handleChange","handleBlur","isSubmitting","arrayHelpers","map","photo","index","remove","push"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,cAA5C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SACEC,IADF,EAEEC,GAFF,EAGEC,WAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,QANF,EAOEC,MAPF,QAQO,kBARP;AASA,SAASC,OAAT,QAAwB,MAAxB;AAEA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,QAAnC;AACA,OAAOC,gBAAP,MAA6B,eAA7B;;;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAiBhB,SAAS,EAAhC;AAEA,QAAM;AAAEiB,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA,IAAtB;AAA4BC,IAAAA;AAA5B,MAAsCjB,QAAQ,CAClD,CAAC,eAAD,EAAkBa,UAAlB,CADkD,EAElD,MAAMf,YAAY,CAACe,UAAD,CAFgC,CAApD;;AAKA,MAAIC,SAAJ,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIC,OAAJ,EAAa;AACX,wBAAO;AAAA,2BAAYE,KAAK,CAACT,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,QAAMU,YAAY,GAAG,OAAOC,MAAP,EAAeC,GAAf,KAAuB;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAd,IAAAA,OAAO,CAACe,OAAR,CAAgB;AAAEC,MAAAA,OAAO,EAAE,YAAX;AAAyBC,MAAAA,GAAG,EAAE;AAA9B,KAAhB;;AAEA,QAAI;AACF,YAAM1B,aAAa,CAACoB,MAAD,EAASN,UAAT,CAAnB;AAEAL,MAAAA,OAAO,CAACkB,OAAR,CAAgB;AACdF,QAAAA,OAAO,EAAE,kCADK;AAEdC,QAAAA,GAAG,EAAE,gBAFS;AAGdE,QAAAA,QAAQ,EAAE;AAHI,OAAhB;AAKD,KARD,CAQE,OAAOC,CAAP,EAAU;AACVpB,MAAAA,OAAO,CAACS,KAAR,CAAc,+BAAd;AACD;AACF,GAfD;;AAiBAI,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBN,IAAzB;AACA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AACba,QAAAA,KAAK,EAAEb,IAAI,CAACa,KADC;AAEbC,QAAAA,WAAW,EAAEd,IAAI,CAACc,WAFL;AAGbC,QAAAA,KAAK,EAAEf,IAAI,CAACe,KAHC;AAIbC,QAAAA,MAAM,EAAEhB,IAAI,CAACgB;AAJA,OADjB;AAOE,MAAA,gBAAgB,EAAErB,gBAPpB;AAQE,MAAA,QAAQ,EAAEO,YARZ;AAAA,gBAUG,CAAC;AACAA,QAAAA,YADA;AAEAe,QAAAA,MAFA;AAGAC,QAAAA,OAHA;AAIAC,QAAAA,YAJA;AAKAC,QAAAA,UALA;AAMAjB,QAAAA,MANA;AAOAkB,QAAAA;AAPA,OAAD,kBASC;AAAA,+BACE,QAAC,GAAD;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAC,GAAR;AAAY,YAAA,SAAS,EAAC,MAAtB;AAAA,mCACE;AAAM,cAAA,QAAQ,EAAEnB,YAAhB;AAAA,sCACE,QAAC,WAAD;AAAA,wCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,KAAD;AACE,kBAAA,IAAI,EAAC,OADP;AAEE,kBAAA,QAAQ,EAAEiB,YAFZ;AAGE,kBAAA,MAAM,EAAEC,UAHV;AAIE,kBAAA,KAAK,EAAEjB,MAAM,CAACU,KAJhB;AAKE,kBAAA,QAAQ,EAAEQ,YALZ;AAME,kBAAA,SAAS,EAAEH,OAAO,CAACL,KAAR,IAAiBI,MAAM,CAACJ;AANrC;AAAA;AAAA;AAAA;AAAA,wBAFF,EAWGK,OAAO,CAACL,KAAR,IAAiBI,MAAM,CAACJ,KAAxB,iBACC,QAAC,IAAD;AAAM,kBAAA,KAAK,EAAC,SAAZ;AAAA,4BAAuBI,MAAM,CAACJ;AAA9B;AAAA;AAAA;AAAA;AAAA,wBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAgBE,QAAC,WAAD;AAAa,gBAAA,EAAE,EAAC,GAAhB;AAAA,wCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,QAAD;AACE,kBAAA,IAAI,EAAC,aADP;AAEE,kBAAA,QAAQ,EAAEM,YAFZ;AAGE,kBAAA,MAAM,EAAEC,UAHV;AAIE,kBAAA,KAAK,EAAEjB,MAAM,CAACW,WAJhB;AAKE,kBAAA,QAAQ,EAAEO,YALZ;AAME,kBAAA,SAAS,EAAEH,OAAO,CAACJ,WAAR,IAAuBG,MAAM,CAACH;AAN3C;AAAA;AAAA;AAAA;AAAA,wBAFF,EAUGI,OAAO,CAACJ,WAAR,IAAuBG,MAAM,CAACH,WAA9B,iBACC,QAAC,IAAD;AAAM,kBAAA,KAAK,EAAC,SAAZ;AAAA,4BAAuBG,MAAM,CAACH;AAA9B;AAAA;AAAA;AAAA;AAAA,wBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhBF,eA8BE,QAAC,WAAD;AAAa,gBAAA,EAAE,EAAC,GAAhB;AAAA,wCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,KAAD;AACE,kBAAA,IAAI,EAAC,OADP;AAEE,kBAAA,QAAQ,EAAEK,YAFZ;AAGE,kBAAA,MAAM,EAAEC,UAHV;AAIE,kBAAA,KAAK,EAAEjB,MAAM,CAACY,KAJhB;AAKE,kBAAA,QAAQ,EAAEM,YALZ;AAME,kBAAA,SAAS,EAAEH,OAAO,CAACH,KAAR,IAAiBE,MAAM,CAACF;AANrC;AAAA;AAAA;AAAA;AAAA,wBAFF,EAUGG,OAAO,CAACH,KAAR,IAAiBE,MAAM,CAACF,KAAxB,iBACC,QAAC,IAAD;AAAM,kBAAA,KAAK,EAAC,SAAZ;AAAA,4BAAuBE,MAAM,CAACF;AAA9B;AAAA;AAAA;AAAA;AAAA,wBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBA9BF,eA6CE,QAAC,WAAD;AAAa,gBAAA,EAAE,EAAC,GAAhB;AAAA,wCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,UAAD;AACE,kBAAA,IAAI,EAAC,QADP;AAEE,kBAAA,MAAM,EAAGO,YAAD,iBACN;AAAA,+BACGnB,MAAM,CAACa,MAAP,IACCb,MAAM,CAACa,MAAP,CAAcO,GAAd,CAAkB,CAACC,KAAD,EAAQC,KAAR,kBAChB;AAAA,8CACE,QAAC,KAAD;AACE,wBAAA,IAAI,EAAG,UAASA,KAAM,EADxB;AAEE,wBAAA,KAAK,EAAED,KAFT;AAGE,wBAAA,QAAQ,EAAEH,YAHZ;AAIE,wBAAA,QAAQ,EAAEF,YAJZ;AAKE,wBAAA,KAAK,EAAC;AALR;AAAA;AAAA;AAAA;AAAA,8BADF,eASE,QAAC,MAAD;AACE,wBAAA,EAAE,EAAC,GADL;AAEE,wBAAA,IAAI,EAAC,QAFP;AAGE,wBAAA,WAAW,EAAC,KAHd;AAIE,wBAAA,OAAO,EAAE,MAAMG,YAAY,CAACI,MAAb,CAAoBD,KAApB,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BATF;AAAA,uBAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,4BADF,CAFJ,eAuBE,QAAC,MAAD;AAAQ,sBAAA,EAAE,EAAC,GAAX;AAAe,sBAAA,OAAO,EAAE,MAAMH,YAAY,CAACK,IAAb,CAAkB,EAAlB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBA7CF,eAiFE,QAAC,MAAD;AACE,gBAAA,EAAE,EAAE,CADN;AAEE,gBAAA,KAAK,EAAC,MAFR;AAGE,gBAAA,IAAI,EAAC,QAHP;AAIE,gBAAA,SAAS,EAAEN,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAnBJ;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2HD;;GA7JQzB,a;UACgBf,S,EAEqBG,Q;;;KAHrCY,a;AA+JT,eAAeA,aAAf","sourcesContent":["import React from \"react\";\n\nimport { useParams } from \"react-router-dom\";\nimport { fetchProduct, updateProduct } from \"../../../api\";\nimport { useQuery } from \"react-query\";\nimport {\n  Text,\n  Box,\n  FormControl,\n  FormLabel,\n  Input,\n  Textarea,\n  Button,\n} from \"@chakra-ui/react\";\nimport { message } from \"antd\";\n\nimport { Formik, FieldArray } from \"formik\";\nimport validationSchema from \"./validations\";\n\nfunction ProductDetail() {\n  const { product_id } = useParams();\n\n  const { isLoading, isError, data, error } = useQuery(\n    [\"admin:product\", product_id],\n    () => fetchProduct(product_id)\n  );\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (isError) {\n    return <div>Error {error.message}</div>;\n  }\n\n  const handleSubmit = async (values, bag) => {\n    console.log(\"submitted\");\n    message.loading({ content: \"Loading...\", key: \"product_update\" });\n\n    try {\n      await updateProduct(values, product_id);\n\n      message.success({\n        content: \"The product successfully updated\",\n        key: \"product_update\",\n        duration: 2,\n      });\n    } catch (e) {\n      message.error(\"The product does not updated.\");\n    }\n  };\n\n  console.log(\"admindata\", data);\n  return (\n    <div>\n      <Text fontSize=\"2xl\">Edit</Text>\n\n      <Formik\n        initialValues={{\n          title: data.title,\n          description: data.description,\n          price: data.price,\n          photos: data.photos,\n        }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({\n          handleSubmit,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          values,\n          isSubmitting,\n        }) => (\n          <>\n            <Box>\n              <Box my=\"5\" textAlign=\"left\">\n                <form onSubmit={handleSubmit}>\n                  <FormControl>\n                    <FormLabel>Title</FormLabel>\n                    <Input\n                      name=\"title\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.title}\n                      disabled={isSubmitting}\n                      isInvalid={touched.title && errors.title}\n                    />\n\n                    {touched.title && errors.title && (\n                      <Text color=\"red.500\">{errors.title}</Text>\n                    )}\n                  </FormControl>\n                  <FormControl mt=\"4\">\n                    <FormLabel>Description</FormLabel>\n                    <Textarea\n                      name=\"description\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.description}\n                      disabled={isSubmitting}\n                      isInvalid={touched.description && errors.description}\n                    />\n                    {touched.description && errors.description && (\n                      <Text color=\"red.500\">{errors.description}</Text>\n                    )}\n                  </FormControl>\n                  <FormControl mt=\"4\">\n                    <FormLabel>Price</FormLabel>\n                    <Input\n                      name=\"price\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.price}\n                      disabled={isSubmitting}\n                      isInvalid={touched.price && errors.price}\n                    />\n                    {touched.price && errors.price && (\n                      <Text color=\"red.500\">{errors.price}</Text>\n                    )}\n                  </FormControl>\n\n                  <FormControl mt=\"4\">\n                    <FormLabel>Photos</FormLabel>\n                    <FieldArray\n                      name=\"photos\"\n                      render={(arrayHelpers) => (\n                        <div>\n                          {values.photos &&\n                            values.photos.map((photo, index) => (\n                              <div key={index}>\n                                <Input\n                                  name={`photos.${index}`}\n                                  value={photo}\n                                  disabled={isSubmitting}\n                                  onChange={handleChange}\n                                  width=\"3xl\"\n                                />\n\n                                <Button\n                                  ml=\"4\"\n                                  type=\"button\"\n                                  colorScheme=\"red\"\n                                  onClick={() => arrayHelpers.remove(index)}\n                                >\n                                  Remove\n                                </Button>\n                              </div>\n                            ))}\n\n                          <Button mt=\"5\" onClick={() => arrayHelpers.push(\"\")}>\n                            Add a Photo\n                          </Button>\n                        </div>\n                      )}\n                    />\n                  </FormControl>\n\n                  <Button\n                    mt={4}\n                    width=\"full\"\n                    type=\"submit\"\n                    isLoading={isSubmitting}\n                  >\n                    Update\n                  </Button>\n                </form>\n              </Box>\n            </Box>\n          </>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default ProductDetail;\n"]},"metadata":{},"sourceType":"module"}